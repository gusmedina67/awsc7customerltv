# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: awsc7customerltv
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.10
  timeout: 3
  memorySize: 128

# you can overwrite defaults here
  stage: stg
  region: us-west-1
  
# you can define service wide environment variables here
  environment:
    USER_ID: customerltv
    PASSWORD: O133ozUDuyyzjH3WxKNT0BXIJUOOqJ7yDPPOEZQfY01cKAJlbR6aouuRKEHk8xPa
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:GetItem"
            - "dynamodb:PutItem"
            - "dynamodb:BatchWriteItem"
          Resource:
            - "arn:aws:dynamodb:us-west-1:655957386383:table/SystemSettings"

# you can add packaging information here
#package:
#  patterns:
#    - '!exclude-me.py'
#    - '!exclude-me-dir/**'
#    - include-me.py
#    - include-me-dir/**

functions:
  get:
    handler: handler.lambda_handler_get
    events:
      - http:
          path: posts/get/{tenant}/{customer_guid}
          method: get
          request:
            parameters:
              paths:
                tenant: true
                customer_guid: true
          cors: true

  activate:
    handler: handler.lambda_handler_activate
    events:
      - http:
          path: posts/activate
          method: post
          cors: true

  deactivate:
    handler: handler.lambda_handler_deactivate
    events:
      - http:
          path: posts/deactivate
          method: post
          cors: true

plugins:
  - serverless-s3-sync

custom:
  s3Sync:
    - bucketName: awsc7customerltv-bucket-stg
      localDir: static-site # Local directory containing your static files
      region: us-west-1

# you can add CloudFormation resource templates here
resources:
  Resources:
    StaticWebsiteBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: awsc7customerltv-bucket-stg
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: error.html
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
          BlockPublicPolicy: false
          IgnorePublicAcls: false
          RestrictPublicBuckets: false
    BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref StaticWebsiteBucket
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action: "s3:GetObject"
              Resource: !Join
                - ""
                - - "arn:aws:s3:::"
                  - !Ref StaticWebsiteBucket
                  - "/*"
    # DynamoDB Table for SystemSettings
    SystemSettingsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: SystemSettings
        AttributeDefinitions:
          - AttributeName: SettingKey
            AttributeType: S
          - AttributeName: Tenant
            AttributeType: S
        KeySchema:
          - AttributeName: SettingKey
            KeyType: HASH # Primary Key
          - AttributeName: Tenant
            KeyType: RANGE # Sort Key
        BillingMode: PROVISIONED # Provisioned throughput mode
        ProvisionedThroughput: # Minimal configuration for cost-effectiveness
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        SSESpecification: # Enable server-side encryption
          SSEEnabled: true